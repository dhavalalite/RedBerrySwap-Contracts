{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
			"kind": "dev",
			"methods": {},
			"title": "SafeBEP20",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"MasterChef.sol": "SafeBEP20"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"MasterChef.sol": {
			"keccak256": "0x3269fc7515e07407f71e64c0a12ab928b7d6db990da4d9155af66efad3cc5d7e",
			"license": "MIT",
			"urls": [
				"bzz-raw://fec1c740782b81c646c22c71dcd2306cc040a8e2a59b209541c3eb050f940731",
				"dweb:/ipfs/QmQQC1ANjVzdRTTE6eoZ1G8EiWQBDe8B6SyPqreMz2TXxZ"
			]
		}
	},
	"version": 1
}